---
title: "TriLLIEM_info"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{heteroEM_info}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

```{r setup}
library(TriLLIEM)
library(dplyr)

set.seed(123)
```

I've added the ability to include either $I_m$ or $I_f$ when simulating data through `simulateData()` (not both).  This requires the user to specify which, as well as the appropriate imprinting relative risk through the `Im` or `If` parameters.  The `datAll` part of the returned list now has an extra column to capture the inheritance information from the triple heterozygote cell.  For example,

```{r}
data <- simulateData(Im = 5)
print(data$dat4R)
print(data$datAll)
```

This should also work for when controls and environmental data are included, for example

```{r}
dataControl <- simulateData(Im = 5, includeControl = TRUE, prControl = 0.5)
print(dataControl$dat4R)
print(dataControl$datAll)
```
I did this by simulating the control data as if there were no imprinting effects (regardless of what Im and If were).  Hopefully this is the correct approach, though I expect I missed a few details...

I also made the `heteroEM()` function, which does what `runLoglin()` does but with imprinting factors being considered.  It:

1. Takes in data such as `data$dat4R` with 15 $(M, F, C)$ cases
2. Applies the `add_PoO_data()` function to the data to split the triple heterozygote cell into two with the `Minit` parameter as the proportion of counts which are of maternal origin (rounding up for maternal, down for paternal, this was decided arbitrarily).  It also creates an "imprinting influence" column so that imprinting is only considered when we're in the cases while fitting the glm (multiplies parent of origin column by D column).  Example output:
```{r}
add_PoO_data(dat = dataControl$dat4R, Mprop = 0.5)
```
3. (Maximization step) Fits the glm to this data with the appropriate effects (by default, $C, M$ and $I_m$ or $I_f$ depending on which form of parental imprinting is considered).  The fitted $\hat{I}$ is extracted from the glm coefficients.
4. (Expectation step) Re-estimates the counts for the two triple heterozygote cells using proportions of $\hat{I}/(1+\hat{I})$ and $1/(1+\hat{I})$ (estimated count formula from Weinberg 1998 but with other imprinting factor set to 1 since we only consider one form of imprinting).
5. Repeats steps 3 and 4 until convergence, and returns the fitted glm.

Example:
```{r}
heteroEM(mtmodel = "MS", dat = data$dat4R, Minit = 0.5) %>% summary()
heteroEM(mtmodel = "MS", dat = dataControl$dat4R, Minit = 0.5) %>% summary()
```

I think it works properly for the simplest case (no controls/environmental effects)?  With the correct specification, the values of $\hat{I}_m$ they converge on seem reasonably close to the true value of 5.  I am less confident about when we have controls, especially since it seems to perform consistently worse than the no controls case (even when they have equal number of cases).  The code runs on data with environmental data and controls, but I'd expect there's several details I'll need to manually add.
